{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleSelectTodo","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","handleSearchQuery","handleSelectQuery","useState","searchQuery","setSearchQuery","selectQuery","setSelectQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","handleClose","user","setUser","loadUser","a","userId","selectedUser","useEffect","href","email","name","App","setTodos","setSelectedTodoId","find","filteredTodos","currentTodos","filter","todosFilter","includes","loadTodos","query","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.061800b0.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  handleSelectTodo: (todoId: number) => void;\n  selectedTodoId: number | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleSelectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => (handleSelectTodo(todo.id))}\n              >\n                {selectedTodoId === todo.id ? (\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                ) : (\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                )}\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable max-len */\nimport { useState } from 'react';\n\ninterface Props {\n  handleSearchQuery: (query: string) => void\n  handleSelectQuery: (query: string) => void\n}\n\nexport const TodoFilter: React.FC<Props> = ({ handleSearchQuery, handleSelectQuery }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectQuery, setSelectQuery] = useState('All');\n\n  const getSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    handleSearchQuery(event.target.value);\n    setSearchQuery(event.target.value);\n  };\n\n  const getSelectQuery = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    handleSelectQuery(event.target.value);\n    setSelectQuery(event.target.value);\n  };\n\n  const reset = () => {\n    handleSearchQuery('');\n    setSearchQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" value={selectQuery} onChange={getSelectQuery}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={getSearchQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchQuery && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo;\n  handleClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, handleClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    const selectedUser = await getUser(selectedTodo.userId);\n\n    setUser(selectedUser);\n  };\n\n  useEffect(\n    () => {\n      loadUser();\n    },\n    [],\n  );\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectQuery, setSelectQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n\n  const handleClose = () => {\n    setSelectedTodoId(null);\n  };\n\n  const selectedTodo: Todo | null = todos.find(todo => (\n    todo.id === selectedTodoId\n  )) || null;\n\n  const handleSelectTodoId = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const handleSearchQuery = (query: React.SetStateAction<string>) => {\n    setSearchQuery(query);\n  };\n\n  const todosFilter = (currentTodos: Todo[]) => {\n    switch (selectQuery) {\n      case 'all':\n        return currentTodos;\n      case 'active':\n        return currentTodos.filter(todo => !todo.completed);\n      case 'completed':\n        return currentTodos.filter(todo => todo.completed);\n      default:\n        return currentTodos;\n    }\n  };\n\n  const visibleTodos = todos.filter(todo => todo.title.includes(searchQuery));\n\n  const filteredTodos = todosFilter(visibleTodos);\n\n  const handleSelecthQuery = (query: React.SetStateAction<string>) => {\n    setSelectQuery(query);\n  };\n\n  const loadTodos = () => {\n    getTodos().then(setTodos);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleSearchQuery={handleSearchQuery} handleSelectQuery={handleSelecthQuery} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length < 1 ? <Loader />\n                : <TodoList selectedTodoId={selectedTodoId} todos={filteredTodos} handleSelectTodo={handleSelectTodoId} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} handleClose={handleClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}